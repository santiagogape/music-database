-- PATH VARIABLES ARE RELATIVE TO THE FOLDER WHERE THE DATA BASE IS

CREATE TABLE IF NOT EXISTS FILES (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    PATH TEXT NOT NULL,
    NAME TEXT NOT NULL,
    TITLE TEXT,
    ALBUM TEXT,
    ARTISTS TEXT,
    REQUEST TEXT
);

-- TABLE FOR RESPONSES AFTER CONSULTING "REQUEST" OF  THE "FILES"
-- PATH IS WHERE THE JSON WILL BE STORED
CREATE TABLE IF NOT EXISTS RESPONSES (
    ID INTEGER PRIMARY KEY
    FOREIGN KEY (ID) REFERENCES FILES(ID)
    PATH TEXT
);

CREATE TABLE IF NOT EXISTS OBJECTS (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    PATH TEXT NOT NULL,
    NAME TEXT NOT NULL,
    TYPE TEXT NOT NULL,
    CREATION TEXT NOT NULL
);

-- CREATION for DATE: yyyy-mm-dd hh:mm:ss

CREATE TABLE IF NOT EXISTS IMAGES (
    OBJECT INTEGER NOT NULL,
    NUMBER INT NOT NULL,
    PATH TEXT NOT NULL,
    WIDTH INT NOT NULL,
    HEIGHT INT NOT NULL,
    FOREIGN KEY (OBJECT) REFERENCES OBJECTS(ID),
    PRIMARY KEY (OBJECT, NUMBER)
);

CREATE TABLE IF NOT EXISTS GENRES (
    GENRE TEXT PRIMARY KEY
);

CREATE TABLE IF NOT EXISTS OBJECT_GENRES (
    OBJECT INTEGER NOT NULL,
    GENRE TEXT NOT NULL,
    PRIMARY KEY (OBJECT, GENRE),
    FOREIGN KEY (OBJECT) REFERENCES OBJECTS(ID),
    FOREIGN KEY (GENRE) REFERENCES GENRES(GENRE)
);

CREATE TABLE IF NOT EXISTS TRACKS (
    ID INTEGER PRIMARY KEY,
    TITLE TEXT NOT NULL,
    ALBUM INTEGER NOT NULL,
    NUMBER INT NOT NULL,
    FOREIGN KEY (ID) REFERENCES OBJECTS(ID)
    FOREIGN KEY (ID) REFERENCES ALBUMS(ID)
);

CREATE TABLE IF NOT EXISTS TRACK_ARTISTS (
    TRACK INTEGER NOT NULL,
    ARTIST INTEGER NOT NULL,
    PRIMARY KEY (TRACK, ARTIST),
    FOREIGN KEY (TRACK) REFERENCES TRACKS(ID),
    FOREIGN KEY (ARTIST) REFERENCES ARTISTS(ID)
);

CREATE TABLE IF NOT EXISTS ALBUMS (
    ID INTEGER PRIMARY KEY,
    TYPE TEXT NOT NULL,
    TRACKS INT NOT NULL,
    RELEASE TEXT NOT NULL,
    RELEASE_PRECISION TEXT NOT NULL,
    LABEL TEXT,
    FOREIGN KEY (ID) REFERENCES OBJECTS(ID)
);

CREATE TABLE IF NOT EXISTS ALBUM_ARTISTS (
    ALBUM INTEGER NOT NULL,
    ARTIST INTEGER NOT NULL,
    PRIMARY KEY (ALBUM, ARTIST),
    FOREIGN KEY (ALBUM) REFERENCES ALBUMS(ID),
    FOREIGN KEY (ARTIST) REFERENCES ARTISTS(ID)
);

CREATE TABLE IF NOT EXISTS ARTISTS (
ID INTEGER PRIMARY KEY,
FOREIGN KEY (ID) REFERENCES OBJECTS(ID)
);


